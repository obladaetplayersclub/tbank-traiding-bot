from aiogram import Bot
from db.connector import get_db_connection

async def send_morning_digest(bot: Bot):
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
    conn = get_db_connection()
    try:
        with conn.cursor() as cur:
            cur.execute("SELECT telegram_id, filter FROM users")
            users = cur.fetchall()

            for tg_id, tickers in users:
                # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∫–∞–∑–∞–Ω—ã —Ç–∏–∫–µ—Ä—ã ‚Äî —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –Ω–∏–º, –∏–Ω–∞—á–µ –±–µ—Ä—ë–º –≤—Å–µ
                if tickers:
                    query = (
                        """
                        SELECT text
                        FROM news
                        WHERE ticker && %s
                        ORDER BY id DESC
                        LIMIT 20
                        """
                    )
                    params = (tickers,)
                else:
                    query = (
                        """
                        SELECT text
                        FROM news
                        ORDER BY id DESC
                        LIMIT 20
                        """
                    )
                    params = None

                # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                if params:
                    cur.execute(query, params)
                else:
                    cur.execute(query)

                rows = cur.fetchall()
                if not rows:
                    continue

                # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–π–¥–∂–µ—Å—Ç –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
                digest_lines = [f"üì∞ {text}" for (text,) in rows]
                digest = "\n".join(reversed(digest_lines))
                await bot.send_message(
                    chat_id=tg_id,
                    text=f"üåÖ *–£—Ç—Ä–µ–Ω–Ω–∏–π –¥–∞–π–¥–∂–µ—Å—Ç*\n\n{digest}",
                    parse_mode="Markdown"
                )
    finally:
        conn.close()
